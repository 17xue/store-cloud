buildscript {
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'com.bmuschko.docker-spring-boot-application' version '4.6.2'
}


ext {
//    moduleProjects = subprojects.findAll {
//        !it.name.equals("spring-build-src") && !it.name.equals("spring-framework-bom") && !it.name.equals("spring-core-coroutines")
//    }

    springCloudVersion = 'Greenwich.SR1'
    springBootVersion = '2.1.3.RELEASE'
    springBootMyBatisVersion = '1.2.0'
    springBootpagehelperVersion = '1.1.0'
    springBootAdminVersion = '1.5.0'
    springBootDruidVersion = '1.0.5'
    springBootRedisVersion = '1.4.7.RELEASE'
    junitVersion = "4.12"
    mysqlVersion = "5.1.32"
    jacksonVersion = "2.8.7"
    httpclientVersion = "4.3.5"
    servletapiVersion = "3.1.0"
    commonslangVersion = "2.6"
    commonslang3Version = "3.3.2"
    commonsioVersion = "1.3.2"
    commonsnetVersion = "3.3"
    jsqlparserVersion = "4.12"
    slf4jVersion = "1.7.2"
    commonsfileuploadVersion = "1.3.1"
    jedisVersion = "2.7.2"
    solrjVersion = "5.4.0"
    freemarkerVersion = "2.3.23"
    quartzVersion = "2.2.2"
    fastjsonVersion = "1.2.28"
    swagger2Version = "2.6.1"
    lombokVersion = "1.16.16"
    fastdfsVersion = "1.27.0.0"
    beetl_starterVersion = "0.0.3"
    hutoolVersion = "3.0.3"
    swagger2Version = "2.6.1"
    logbackkafkaVersion = "0.1.0"
    apolloclientVersion = "2.4.12"


    // spring framework
    aspectjVersion = "1.9.2"
    coroutinesVersion = "1.2.0-alpha"
    freemarkerVersion = "2.3.28"
    groovyVersion = "2.5.6"
    hsqldbVersion = "2.4.1"
    jackson2Version = "2.9.8"
    jettyVersion = "9.4.15.v20190215"
    junit5Version = "5.4.1"
    kotlinVersion = "1.3.21"
    log4jVersion = "2.11.2"
    nettyVersion = "4.1.34.Final"
    quartzVersion = "2.3.0"
    reactorVersion = "Californium-SR6"
    rxjavaVersion = "1.3.8"
    rxjavaAdapterVersion = "1.2.1"
    rxjava2Version = "2.2.8"
    slf4jVersion = "1.7.26"      // spring-jcl + consistent 3rd party deps
    tiles3Version = "3.0.8"
    tomcatVersion = "9.0.17"
    undertowVersion = "2.0.19.Final"

    gradleScriptDir = "${rootProject.projectDir}/gradle"
//    withoutJclOverSlf4J = {
//        exclude group: "org.slf4j", module: "jcl-over-slf4j"
//    }
}


configure(allprojects) { project ->
    group = group
    version = version

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: "kotlin"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
//    if (!(name.contains('common'))) {
//        apply plugin: 'org.springframework.boot'
//    }
//    apply plugin: 'docker'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
//    compileJava {
//        sourceCompatibility = 1.8
//        targetCompatibility = 1.8
//        options.encoding = "UTF-8"
//    }
//
//    compileTestJava {
//        sourceCompatibility = 1.8
//        targetCompatibility = 1.8
//        options.encoding = "UTF-8"
//        options.compilerArgs += "-parameters"
//    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        mavenCentral()
        jcenter()
    }

    dependencies {
        if (!(name.contains('common'))) {
            testCompile("org.springframework.boot:spring-boot-starter-test")
            testCompile("junit:junit:${junitVersion}")
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

//    if (!((name.contains('common')) || (name.contains('api')) || (name == 'store-cloud'))) {
//        task buildDocker(type: Docker, dependsOn: bootRepackage) {
//            push = true
//            registry = dockerRegistry
//            applicationName = jar.baseName
//            dockerfile = file('Dockerfile')
//            doFirst {
//                copy {
//                    from jar
//                    into stageDir
//                }
//            }
//        }
//    }

//    if (name.contains('api')) {
//        tasks.remove(bootRepackage)
//    }
}

configure(rootProject) {
    description = "store-cloud"

//    dependencyManagement {
//        imports {
//            mavenBom "io.projectreactor:reactor-bom"
//        }
//        resolutionStrategy {
//            cacheChangingModulesFor 0, 'seconds'
//        }
//        applyMavenExclusions = false
//    }

    // don't publish the default jar for the root project
    configurations.archives.artifacts.clear()

    dependencies {  // for integration tests
//        testCompile(project(":spring-aop"))
    }

//    task buildDocker(type: Docker, dependsOn: bootRepackage) {
//        push = true
//        applicationName = jar.baseName
//        dockerfile = file('Dockerfile')
//        doFirst {
//            copy {
//                from jar
//                into stageDir
//            }
//        }
//    }

}
